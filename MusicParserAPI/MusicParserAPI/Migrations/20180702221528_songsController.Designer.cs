// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicParserAPI.Data;

namespace MusicParserAPI.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20180702221528_songsController")]
    partial class songsController
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicParserAPI.Models.Playlist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("MusicParserAPI.Models.Song", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Album");

                    b.Property<string>("Artist");

                    b.Property<string>("Genre");

                    b.Property<string>("Name");

                    b.Property<int?>("PlaylistID");

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("ID");

                    b.HasIndex("PlaylistID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicParserAPI.Models.Song", b =>
                {
                    b.HasOne("MusicParserAPI.Models.Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistID");
                });
#pragma warning restore 612, 618
        }
    }
}
